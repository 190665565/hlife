package com.partner.hlife.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class HtMerPhotoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public HtMerPhotoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMerIdIsNull() {
            addCriterion("MER_ID is null");
            return (Criteria) this;
        }

        public Criteria andMerIdIsNotNull() {
            addCriterion("MER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMerIdEqualTo(Long value) {
            addCriterion("MER_ID =", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotEqualTo(Long value) {
            addCriterion("MER_ID <>", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdGreaterThan(Long value) {
            addCriterion("MER_ID >", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("MER_ID >=", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdLessThan(Long value) {
            addCriterion("MER_ID <", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdLessThanOrEqualTo(Long value) {
            addCriterion("MER_ID <=", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdIn(List<Long> values) {
            addCriterion("MER_ID in", values, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotIn(List<Long> values) {
            addCriterion("MER_ID not in", values, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdBetween(Long value1, Long value2) {
            addCriterion("MER_ID between", value1, value2, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotBetween(Long value1, Long value2) {
            addCriterion("MER_ID not between", value1, value2, "merId");
            return (Criteria) this;
        }

        public Criteria andPUlrIsNull() {
            addCriterion("P_ULR is null");
            return (Criteria) this;
        }

        public Criteria andPUlrIsNotNull() {
            addCriterion("P_ULR is not null");
            return (Criteria) this;
        }

        public Criteria andPUlrEqualTo(String value) {
            addCriterion("P_ULR =", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrNotEqualTo(String value) {
            addCriterion("P_ULR <>", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrGreaterThan(String value) {
            addCriterion("P_ULR >", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrGreaterThanOrEqualTo(String value) {
            addCriterion("P_ULR >=", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrLessThan(String value) {
            addCriterion("P_ULR <", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrLessThanOrEqualTo(String value) {
            addCriterion("P_ULR <=", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrLike(String value) {
            addCriterion("P_ULR like", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrNotLike(String value) {
            addCriterion("P_ULR not like", value, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrIn(List<String> values) {
            addCriterion("P_ULR in", values, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrNotIn(List<String> values) {
            addCriterion("P_ULR not in", values, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrBetween(String value1, String value2) {
            addCriterion("P_ULR between", value1, value2, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPUlrNotBetween(String value1, String value2) {
            addCriterion("P_ULR not between", value1, value2, "pUlr");
            return (Criteria) this;
        }

        public Criteria andPOrderIsNull() {
            addCriterion("P_ORDER is null");
            return (Criteria) this;
        }

        public Criteria andPOrderIsNotNull() {
            addCriterion("P_ORDER is not null");
            return (Criteria) this;
        }

        public Criteria andPOrderEqualTo(Short value) {
            addCriterion("P_ORDER =", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderNotEqualTo(Short value) {
            addCriterion("P_ORDER <>", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderGreaterThan(Short value) {
            addCriterion("P_ORDER >", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderGreaterThanOrEqualTo(Short value) {
            addCriterion("P_ORDER >=", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderLessThan(Short value) {
            addCriterion("P_ORDER <", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderLessThanOrEqualTo(Short value) {
            addCriterion("P_ORDER <=", value, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderIn(List<Short> values) {
            addCriterion("P_ORDER in", values, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderNotIn(List<Short> values) {
            addCriterion("P_ORDER not in", values, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderBetween(Short value1, Short value2) {
            addCriterion("P_ORDER between", value1, value2, "pOrder");
            return (Criteria) this;
        }

        public Criteria andPOrderNotBetween(Short value1, Short value2) {
            addCriterion("P_ORDER not between", value1, value2, "pOrder");
            return (Criteria) this;
        }

        public Criteria andCreateOnIsNull() {
            addCriterion("CREATE_ON is null");
            return (Criteria) this;
        }

        public Criteria andCreateOnIsNotNull() {
            addCriterion("CREATE_ON is not null");
            return (Criteria) this;
        }

        public Criteria andCreateOnEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON =", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON <>", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_ON >", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON >=", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_ON <", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON <=", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_ON in", values, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_ON not in", values, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_ON between", value1, value2, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_ON not between", value1, value2, "createOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIsNull() {
            addCriterion("UPDATE_ON is null");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIsNotNull() {
            addCriterion("UPDATE_ON is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateOnEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON =", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <>", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_ON >", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON >=", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <=", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_ON in", values, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_ON not in", values, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_ON between", value1, value2, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_ON not between", value1, value2, "updateOn");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIsNull() {
            addCriterion("OPTIMIZED_LOCK is null");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIsNotNull() {
            addCriterion("OPTIMIZED_LOCK is not null");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK =", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK <>", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockGreaterThan(Integer value) {
            addCriterion("OPTIMIZED_LOCK >", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK >=", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockLessThan(Integer value) {
            addCriterion("OPTIMIZED_LOCK <", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockLessThanOrEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK <=", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIn(List<Integer> values) {
            addCriterion("OPTIMIZED_LOCK in", values, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotIn(List<Integer> values) {
            addCriterion("OPTIMIZED_LOCK not in", values, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockBetween(Integer value1, Integer value2) {
            addCriterion("OPTIMIZED_LOCK between", value1, value2, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotBetween(Integer value1, Integer value2) {
            addCriterion("OPTIMIZED_LOCK not between", value1, value2, "optimizedLock");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_mer_photo
     *
     * @mbg.generated do_not_delete_during_merge Fri Apr 28 09:32:24 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_mer_photo
     *
     * @mbg.generated Fri Apr 28 09:32:24 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}