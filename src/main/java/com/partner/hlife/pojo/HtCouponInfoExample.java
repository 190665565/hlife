package com.partner.hlife.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class HtCouponInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public HtCouponInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPUrlIsNull() {
            addCriterion("P_URL is null");
            return (Criteria) this;
        }

        public Criteria andPUrlIsNotNull() {
            addCriterion("P_URL is not null");
            return (Criteria) this;
        }

        public Criteria andPUrlEqualTo(String value) {
            addCriterion("P_URL =", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlNotEqualTo(String value) {
            addCriterion("P_URL <>", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlGreaterThan(String value) {
            addCriterion("P_URL >", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlGreaterThanOrEqualTo(String value) {
            addCriterion("P_URL >=", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlLessThan(String value) {
            addCriterion("P_URL <", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlLessThanOrEqualTo(String value) {
            addCriterion("P_URL <=", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlLike(String value) {
            addCriterion("P_URL like", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlNotLike(String value) {
            addCriterion("P_URL not like", value, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlIn(List<String> values) {
            addCriterion("P_URL in", values, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlNotIn(List<String> values) {
            addCriterion("P_URL not in", values, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlBetween(String value1, String value2) {
            addCriterion("P_URL between", value1, value2, "pUrl");
            return (Criteria) this;
        }

        public Criteria andPUrlNotBetween(String value1, String value2) {
            addCriterion("P_URL not between", value1, value2, "pUrl");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andCDescIsNull() {
            addCriterion("C_DESC is null");
            return (Criteria) this;
        }

        public Criteria andCDescIsNotNull() {
            addCriterion("C_DESC is not null");
            return (Criteria) this;
        }

        public Criteria andCDescEqualTo(String value) {
            addCriterion("C_DESC =", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescNotEqualTo(String value) {
            addCriterion("C_DESC <>", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescGreaterThan(String value) {
            addCriterion("C_DESC >", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescGreaterThanOrEqualTo(String value) {
            addCriterion("C_DESC >=", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescLessThan(String value) {
            addCriterion("C_DESC <", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescLessThanOrEqualTo(String value) {
            addCriterion("C_DESC <=", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescLike(String value) {
            addCriterion("C_DESC like", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescNotLike(String value) {
            addCriterion("C_DESC not like", value, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescIn(List<String> values) {
            addCriterion("C_DESC in", values, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescNotIn(List<String> values) {
            addCriterion("C_DESC not in", values, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescBetween(String value1, String value2) {
            addCriterion("C_DESC between", value1, value2, "cDesc");
            return (Criteria) this;
        }

        public Criteria andCDescNotBetween(String value1, String value2) {
            addCriterion("C_DESC not between", value1, value2, "cDesc");
            return (Criteria) this;
        }

        public Criteria andAmtIsNull() {
            addCriterion("AMT is null");
            return (Criteria) this;
        }

        public Criteria andAmtIsNotNull() {
            addCriterion("AMT is not null");
            return (Criteria) this;
        }

        public Criteria andAmtEqualTo(Double value) {
            addCriterion("AMT =", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotEqualTo(Double value) {
            addCriterion("AMT <>", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtGreaterThan(Double value) {
            addCriterion("AMT >", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtGreaterThanOrEqualTo(Double value) {
            addCriterion("AMT >=", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtLessThan(Double value) {
            addCriterion("AMT <", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtLessThanOrEqualTo(Double value) {
            addCriterion("AMT <=", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtIn(List<Double> values) {
            addCriterion("AMT in", values, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotIn(List<Double> values) {
            addCriterion("AMT not in", values, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtBetween(Double value1, Double value2) {
            addCriterion("AMT between", value1, value2, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotBetween(Double value1, Double value2) {
            addCriterion("AMT not between", value1, value2, "amt");
            return (Criteria) this;
        }

        public Criteria andMerIdIsNull() {
            addCriterion("MER_ID is null");
            return (Criteria) this;
        }

        public Criteria andMerIdIsNotNull() {
            addCriterion("MER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMerIdEqualTo(Long value) {
            addCriterion("MER_ID =", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotEqualTo(Long value) {
            addCriterion("MER_ID <>", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdGreaterThan(Long value) {
            addCriterion("MER_ID >", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("MER_ID >=", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdLessThan(Long value) {
            addCriterion("MER_ID <", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdLessThanOrEqualTo(Long value) {
            addCriterion("MER_ID <=", value, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdIn(List<Long> values) {
            addCriterion("MER_ID in", values, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotIn(List<Long> values) {
            addCriterion("MER_ID not in", values, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdBetween(Long value1, Long value2) {
            addCriterion("MER_ID between", value1, value2, "merId");
            return (Criteria) this;
        }

        public Criteria andMerIdNotBetween(Long value1, Long value2) {
            addCriterion("MER_ID not between", value1, value2, "merId");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("AREA is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("AREA is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(Integer value) {
            addCriterion("AREA =", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(Integer value) {
            addCriterion("AREA <>", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(Integer value) {
            addCriterion("AREA >", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("AREA >=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(Integer value) {
            addCriterion("AREA <", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(Integer value) {
            addCriterion("AREA <=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<Integer> values) {
            addCriterion("AREA in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<Integer> values) {
            addCriterion("AREA not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(Integer value1, Integer value2) {
            addCriterion("AREA between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("AREA not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andUseRuleIsNull() {
            addCriterion("USE_RULE is null");
            return (Criteria) this;
        }

        public Criteria andUseRuleIsNotNull() {
            addCriterion("USE_RULE is not null");
            return (Criteria) this;
        }

        public Criteria andUseRuleEqualTo(String value) {
            addCriterion("USE_RULE =", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleNotEqualTo(String value) {
            addCriterion("USE_RULE <>", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleGreaterThan(String value) {
            addCriterion("USE_RULE >", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleGreaterThanOrEqualTo(String value) {
            addCriterion("USE_RULE >=", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleLessThan(String value) {
            addCriterion("USE_RULE <", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleLessThanOrEqualTo(String value) {
            addCriterion("USE_RULE <=", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleLike(String value) {
            addCriterion("USE_RULE like", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleNotLike(String value) {
            addCriterion("USE_RULE not like", value, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleIn(List<String> values) {
            addCriterion("USE_RULE in", values, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleNotIn(List<String> values) {
            addCriterion("USE_RULE not in", values, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleBetween(String value1, String value2) {
            addCriterion("USE_RULE between", value1, value2, "useRule");
            return (Criteria) this;
        }

        public Criteria andUseRuleNotBetween(String value1, String value2) {
            addCriterion("USE_RULE not between", value1, value2, "useRule");
            return (Criteria) this;
        }

        public Criteria andGivedNumIsNull() {
            addCriterion("GIVED_NUM is null");
            return (Criteria) this;
        }

        public Criteria andGivedNumIsNotNull() {
            addCriterion("GIVED_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andGivedNumEqualTo(Long value) {
            addCriterion("GIVED_NUM =", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumNotEqualTo(Long value) {
            addCriterion("GIVED_NUM <>", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumGreaterThan(Long value) {
            addCriterion("GIVED_NUM >", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumGreaterThanOrEqualTo(Long value) {
            addCriterion("GIVED_NUM >=", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumLessThan(Long value) {
            addCriterion("GIVED_NUM <", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumLessThanOrEqualTo(Long value) {
            addCriterion("GIVED_NUM <=", value, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumIn(List<Long> values) {
            addCriterion("GIVED_NUM in", values, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumNotIn(List<Long> values) {
            addCriterion("GIVED_NUM not in", values, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumBetween(Long value1, Long value2) {
            addCriterion("GIVED_NUM between", value1, value2, "givedNum");
            return (Criteria) this;
        }

        public Criteria andGivedNumNotBetween(Long value1, Long value2) {
            addCriterion("GIVED_NUM not between", value1, value2, "givedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumIsNull() {
            addCriterion("USED_NUM is null");
            return (Criteria) this;
        }

        public Criteria andUsedNumIsNotNull() {
            addCriterion("USED_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andUsedNumEqualTo(Long value) {
            addCriterion("USED_NUM =", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumNotEqualTo(Long value) {
            addCriterion("USED_NUM <>", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumGreaterThan(Long value) {
            addCriterion("USED_NUM >", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumGreaterThanOrEqualTo(Long value) {
            addCriterion("USED_NUM >=", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumLessThan(Long value) {
            addCriterion("USED_NUM <", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumLessThanOrEqualTo(Long value) {
            addCriterion("USED_NUM <=", value, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumIn(List<Long> values) {
            addCriterion("USED_NUM in", values, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumNotIn(List<Long> values) {
            addCriterion("USED_NUM not in", values, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumBetween(Long value1, Long value2) {
            addCriterion("USED_NUM between", value1, value2, "usedNum");
            return (Criteria) this;
        }

        public Criteria andUsedNumNotBetween(Long value1, Long value2) {
            addCriterion("USED_NUM not between", value1, value2, "usedNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumIsNull() {
            addCriterion("TOTLE_NUM is null");
            return (Criteria) this;
        }

        public Criteria andTotleNumIsNotNull() {
            addCriterion("TOTLE_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andTotleNumEqualTo(Long value) {
            addCriterion("TOTLE_NUM =", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumNotEqualTo(Long value) {
            addCriterion("TOTLE_NUM <>", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumGreaterThan(Long value) {
            addCriterion("TOTLE_NUM >", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumGreaterThanOrEqualTo(Long value) {
            addCriterion("TOTLE_NUM >=", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumLessThan(Long value) {
            addCriterion("TOTLE_NUM <", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumLessThanOrEqualTo(Long value) {
            addCriterion("TOTLE_NUM <=", value, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumIn(List<Long> values) {
            addCriterion("TOTLE_NUM in", values, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumNotIn(List<Long> values) {
            addCriterion("TOTLE_NUM not in", values, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumBetween(Long value1, Long value2) {
            addCriterion("TOTLE_NUM between", value1, value2, "totleNum");
            return (Criteria) this;
        }

        public Criteria andTotleNumNotBetween(Long value1, Long value2) {
            addCriterion("TOTLE_NUM not between", value1, value2, "totleNum");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIsNull() {
            addCriterion("EXPIRE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIsNotNull() {
            addCriterion("EXPIRE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andExpireTimeEqualTo(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME =", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME <>", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME >", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME >=", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeLessThan(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME <", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EXPIRE_TIME <=", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIn(List<Date> values) {
            addCriterionForJDBCDate("EXPIRE_TIME in", values, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("EXPIRE_TIME not in", values, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EXPIRE_TIME between", value1, value2, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EXPIRE_TIME not between", value1, value2, "expireTime");
            return (Criteria) this;
        }

        public Criteria andCreateOnIsNull() {
            addCriterion("CREATE_ON is null");
            return (Criteria) this;
        }

        public Criteria andCreateOnIsNotNull() {
            addCriterion("CREATE_ON is not null");
            return (Criteria) this;
        }

        public Criteria andCreateOnEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON =", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON <>", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_ON >", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON >=", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_ON <", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_ON <=", value, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_ON in", values, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_ON not in", values, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_ON between", value1, value2, "createOn");
            return (Criteria) this;
        }

        public Criteria andCreateOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_ON not between", value1, value2, "createOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIsNull() {
            addCriterion("UPDATE_ON is null");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIsNotNull() {
            addCriterion("UPDATE_ON is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateOnEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON =", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <>", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_ON >", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON >=", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_ON <=", value, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_ON in", values, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_ON not in", values, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_ON between", value1, value2, "updateOn");
            return (Criteria) this;
        }

        public Criteria andUpdateOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_ON not between", value1, value2, "updateOn");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIsNull() {
            addCriterion("OPTIMIZED_LOCK is null");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIsNotNull() {
            addCriterion("OPTIMIZED_LOCK is not null");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK =", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK <>", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockGreaterThan(Integer value) {
            addCriterion("OPTIMIZED_LOCK >", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK >=", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockLessThan(Integer value) {
            addCriterion("OPTIMIZED_LOCK <", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockLessThanOrEqualTo(Integer value) {
            addCriterion("OPTIMIZED_LOCK <=", value, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockIn(List<Integer> values) {
            addCriterion("OPTIMIZED_LOCK in", values, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotIn(List<Integer> values) {
            addCriterion("OPTIMIZED_LOCK not in", values, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockBetween(Integer value1, Integer value2) {
            addCriterion("OPTIMIZED_LOCK between", value1, value2, "optimizedLock");
            return (Criteria) this;
        }

        public Criteria andOptimizedLockNotBetween(Integer value1, Integer value2) {
            addCriterion("OPTIMIZED_LOCK not between", value1, value2, "optimizedLock");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_coupon_info
     *
     * @mbg.generated do_not_delete_during_merge Sat Apr 29 11:23:54 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ht_coupon_info
     *
     * @mbg.generated Sat Apr 29 11:23:54 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}